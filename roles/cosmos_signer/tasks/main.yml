---
- name: Create signer user and group
  block:
    - name: Get group info
      getent:
        database: group
        key: "{{ node_group }}"
      ignore_errors: true
      register: group_info

    - name: Create signer group
      group:
        name: "{{ node_group }}"
        gid: "{{ node_gid }}"
        state: present
      when: group_info.failed | default(true)

    - name: Get user info
      getent:
        database: passwd
        key: "{{ node_user }}"
      ignore_errors: true
      register: user_info

    - name: Create signer user
      user:
        name: "{{ node_user }}"
        uid: "{{ node_uid }}"
        group: "{{ node_group }}"
        home: "{{ node_home }}"
        shell: /bin/bash
        system: no
        create_home: yes
      when: user_info.failed | default(true)

- name: Create base directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ node_user }}"
    group: "{{ node_group }}"
    mode: '0750'
  with_items:
    - "{{ horcrux.state_dir }}"
    - "{{ horcrux.state_dir }}/shards"
    - "{{ horcrux.state_dir }}/tmp"

- name: Generate validator key
  community.docker.docker_container:
    name: tendermint-gen-key
    image: "{{ chain.tendermint_image | default('cometbft/cometbft:v0.38.2') }}"
    entrypoint: sh
    command: -c "cometbft init && cp /cometbft/config/priv_validator_key.json /data/priv_validator_key.json"
    volumes:
      - "{{ horcrux.state_dir }}:/data"
      - "{{ horcrux.state_dir }}/tmp:/cometbft"
    user: "root"
    detach: false
    cleanup: true
  register: key_creation

- name: Fix validator key permissions
  file:
    path: "{{ horcrux.state_dir }}/priv_validator_key.json"
    owner: "{{ node_user }}"
    group: "{{ node_group }}"
    mode: '0600'

- name: Create ED25519 shards from validator key
  community.docker.docker_container:
    name: horcrux-ed25519
    image: ghcr.io/strangelove-ventures/horcrux:v3.3.1
    entrypoint: horcrux
    command: >
      create-ed25519-shards
      --chain-id {{ chain.id }}
      --key-file /data/priv_validator_key.json
      --out /data/shards
      --threshold {{ horcrux.threshold }}
      --shards {{ horcrux.total_cosigners }}
    volumes:
      - "{{ horcrux.state_dir }}:/data"
    user: "root"
    detach: false
    cleanup: true
  register: shard_creation

# - name: Copy shards to cosigner directories
#   copy:
#     src: "{{ horcrux.state_dir }}/shards/cosigner_{{ item }}"
#     dest: "{{ horcrux.state_dir }}/cosigner-{{ item }}/config/share.json"
#     remote_src: yes
#     owner: "{{ node_user }}"
#     group: "{{ node_group }}"
#     mode: '0600'
#   with_sequence: start=1 end="{{ horcrux.total_cosigners }}"

# - name: Initialize config for each cosigner
#   community.docker.docker_container:
#     name: "horcrux-init-{{ item }}"
#     image: ghcr.io/strangelove-ventures/horcrux:v3.3.1
#     entrypoint: horcrux
#     command: >
#       config init
#       {% for i in range(1, horcrux.total_cosigners + 1) %}
#       --cosigner "tcp://127.0.0.1:{{ horcrux.base_port + i }}"
#       {% endfor %}
#       --threshold {{ horcrux.threshold }}
#       --grpc-timeout 1500ms
#       --raft-timeout 1500ms
#     volumes:
#       - "{{ horcrux.state_dir }}/cosigner-{{ item }}:/root/.horcrux"
#     user: "{{ node_uid }}:{{ node_gid }}"
#     detach: false
#     cleanup: true
#   with_sequence: start=1 end="{{ horcrux.total_cosigners }}"

# - name: Create Docker Compose file
#   template:
#     src: docker-compose.yml.j2
#     dest: "{{ horcrux.state_dir }}/docker-compose.yml"
#     owner: "{{ node_user }}"
#     group: "{{ node_group }}"
#     mode: '0600'

# - name: Start Horcrux service
#   community.docker.docker_compose_v2:
#     project_src: "{{ horcrux.state_dir }}"
#     state: present 